/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package edu.aabu.maintenence.dao;

import java.util.Date;
import edu.aabu.maintenence.dto.*;
import edu.aabu.maintenence.exceptions.*;
import java.util.List;

public interface MaintenanceOrdersActionsDao
{
	/** 
	 * Inserts a new row in the MAINTENANCE_ORDERS_ACTIONS table.
	 */
	public MaintenanceOrdersActionsPk insert(MaintenanceOrdersActions dto) throws MaintenanceOrdersActionsDaoException;

	/** 
	 * Updates a single row in the MAINTENANCE_ORDERS_ACTIONS table.
	 */
	public void update(MaintenanceOrdersActionsPk pk, MaintenanceOrdersActions dto) throws MaintenanceOrdersActionsDaoException;

	/** 
	 * Deletes a single row in the MAINTENANCE_ORDERS_ACTIONS table.
	 */
	public void delete(MaintenanceOrdersActionsPk pk) throws MaintenanceOrdersActionsDaoException;

	/** 
	 * Returns the rows from the MAINTENANCE_ORDERS_ACTIONS table that matches the specified primary-key value.
	 */
	public MaintenanceOrdersActions findByPrimaryKey(MaintenanceOrdersActionsPk pk) throws MaintenanceOrdersActionsDaoException;

	/** 
	 * Returns all rows from the MAINTENANCE_ORDERS_ACTIONS table that match the criteria 'ORDER_NO = :orderNo AND ORDER_YEAR = :orderYear AND ACTION_TIME = :actionTime'.
	 */
	public MaintenanceOrdersActions findByPrimaryKey(int orderNo, short orderYear, Date actionTime) throws MaintenanceOrdersActionsDaoException;

	/** 
	 * Returns all rows from the MAINTENANCE_ORDERS_ACTIONS table that match the criteria ''.
	 */
	public MaintenanceOrdersActions[] findAll() throws MaintenanceOrdersActionsDaoException;

	/** 
	 * Returns all rows from the MAINTENANCE_ORDERS_ACTIONS table that match the criteria 'ACTION_DESC = :actionDesc'.
	 */
	public MaintenanceOrdersActions[] findWhereActionDescEquals(String actionDesc) throws MaintenanceOrdersActionsDaoException;

	/** 
	 * Returns all rows from the MAINTENANCE_ORDERS_ACTIONS table that match the criteria 'ACTION_TIME = :actionTime'.
	 */
	public MaintenanceOrdersActions[] findWhereActionTimeEquals(Date actionTime) throws MaintenanceOrdersActionsDaoException;

	/** 
	 * Returns all rows from the MAINTENANCE_ORDERS_ACTIONS table that match the criteria 'ORDER_NO = :orderNo'.
	 */
	public MaintenanceOrdersActions[] findWhereOrderNoEquals(int orderNo) throws MaintenanceOrdersActionsDaoException;

	/** 
	 * Returns all rows from the MAINTENANCE_ORDERS_ACTIONS table that match the criteria 'ORDER_YEAR = :orderYear'.
	 */
	public MaintenanceOrdersActions[] findWhereOrderYearEquals(short orderYear) throws MaintenanceOrdersActionsDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the MAINTENANCE_ORDERS_ACTIONS table that match the specified arbitrary SQL statement
	 */
	public MaintenanceOrdersActions[] findByDynamicSelect(String sql, Object[] sqlParams) throws MaintenanceOrdersActionsDaoException;

	/** 
	 * Returns all rows from the MAINTENANCE_ORDERS_ACTIONS table that match the specified arbitrary SQL statement
	 */
	public MaintenanceOrdersActions[] findByDynamicWhere(String sql, Object[] sqlParams) throws MaintenanceOrdersActionsDaoException;

	public void insertAction(MaintenanceOrdersActions dto,String notes,int actionType) throws MaintenanceOrdersActionsDaoException;
	public List<MaintenanceOrdersActions> findByPk(MaintenanceOrdersActions dto) throws MaintenanceOrdersActionsDaoException;
}
