/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package edu.aabu.maintenence;

import edu.aabu.peaff.Peparty;
import java.math.*;
import java.util.Date;
import java.util.Collection;
import edu.aabu.maintenence.dao.MaintenanceOrdersDao;
import edu.aabu.maintenence.dto.MaintenanceOrders;
import edu.aabu.maintenence.dto.MaintenanceOrdersDesc;
import edu.aabu.maintenence.exceptions.MaintenanceOrdersDaoException;
import edu.aabu.maintenence.factory.MaintenanceOrdersDaoFactory;
import java.util.List;

public class MaintenanceOrdersDaoSample
{
	/**
	 * Method 'main'
	 * 
	 * @param arg
	 * @throws Exception
	 */
	public static void main(String[] arg) throws Exception
	{
		// Uncomment one of the lines below to test the generated code
            System.out.println("start");
		//insert() ;
		//cancel() ;
                //getEmpWorkPlaces();
//                findByEmpNo();
                //update();
            findByManager();
               //findWhereOrderStatusEqualsNew();
		// findAll();
               //findByPk();
		// findWhereOrderNoEquals(0);
		// findWhereOrderYearEquals(0);
		// findWherePeEmpNoEquals(0);
		// findWhereOrderDateEquals(null);
		// findWhereProblemDescEquals("");
		// findWherePeTypeCodeEquals(0);
		// findWherePeMainCodeEquals(0);
		// findWherePeSectionCodeEquals(0);
		// findWherePeClassCodeEquals(0);
		// findWhereEmpPhoneEquals("");
		// findWhereEmpOpinionEquals("");
		// findWhereOrderEmergEquals(0);
		// findWhereOrderStatusEquals(0);
	}

	public static void insert()
	{
		try {
			MaintenanceOrdersDao _dao = getMaintenanceOrdersDao();
			MaintenanceOrders _result = new MaintenanceOrders();
                        _result.setPeEmpNo(1523);
                        _result.setPeTypeCode((short)5);
                        _result.setPeMainCode((short)1);
                        _result.setPeSectionCode((short)7);
                        _result.setPeClassCode((short)0);
                        _result.setEmpOpinion("");
                        _result.setProblemDesc("تجريبي");
                        _result.setEmpPhone("2353");
                        _result.setAddress("2353");
                        _result.setManagerId(2353);
                        _result.setToPeTypeCode((short)6);
                        _result.setToPeMainCode((short)1);
                        _result.setToPeSectionCode((short)0);
                        _result.setToPeClassCode((short)0);
                        _dao.insert(_result);
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}

	}
	public static void cancel()
	{
		try {
			MaintenanceOrdersDao _dao = getMaintenanceOrdersDao();
			MaintenanceOrders _result = new MaintenanceOrders();
                        _result.setOrderNo(2);
                        _result.setOrderYear((short) 2012);
                        _dao.cancel(_result);
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}

	}
	public static void update()
	{
		try {
			MaintenanceOrdersDao _dao = getMaintenanceOrdersDao();
                        MaintenanceOrders _result = _dao.findByPk(1, (short)2012);
                        System.out.println("\n_result after find by pk :- \n" + _result);
                        _result.setProblemDesc("test first");
                        _result.setEmpPhone("2345-1");
                        _result.setToPeTypeCode((short)8);
                        _dao.update(_result);
                        System.out.println("\n\n_result update := " + _result);
                        _result.setEmpOpinion("test updateOpinion");
                        _dao.updateOpinion(_result);
                        System.out.println("_result updateOpinion := " + _result);
                        _result.setOrderStatus((short) 8 );
                        _dao.updateStatus(_result);
                        System.out.println("_result updateStatus = " + _result);
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}

	}
	public static void getEmpWorkPlaces()
	{
		try {
			MaintenanceOrdersDao _dao = getMaintenanceOrdersDao();
                        List<Peparty> empWorkPlaces = _dao.getEmpWorkPlaces(1523);
                        System.out.println(empWorkPlaces + "\n size is " + empWorkPlaces.size()) ;
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}

	}
	public static void findByEmpNo()
	{
		try {
			MaintenanceOrdersDao _dao = getMaintenanceOrdersDao();
                        Peparty sec = new Peparty();
                        sec.setPeTypeCode((short)6);
                        sec.setPeMainCode((short)21);
                        List<MaintenanceOrdersDesc> empWorkPlaces = _dao.findByEmpNo(1126,sec);
                        System.out.println(empWorkPlaces + "\n size is " + empWorkPlaces.size()) ;
                        //System.out.println(empWorkPlaces.get(0).getOrderStatusDesc() + "\n size is " + empWorkPlaces.size()) ;
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}

	}
	public static void findByManager()
	{
		try {
			MaintenanceOrdersDao _dao = getMaintenanceOrdersDao();
                        List<MaintenanceOrdersDesc> empWorkPlaces = _dao.findByManager(1126,(short) 1);
                        System.out.println(empWorkPlaces + "\n size is " + empWorkPlaces.size()) ;
                        System.out.println(empWorkPlaces.get(0).getOrderStatusDesc() + "\n size is " + empWorkPlaces.size()) ;
                        System.out.println("--------\ngetToPepartydesc :"+empWorkPlaces.get(1).getToPepartydesc() + "\n getEmpName " + empWorkPlaces.get(1).getEmpName() + "\n ---getPepartydesc :" + empWorkPlaces.get(1).getPepartydesc()) ;
                        System.out.println("--------\ngetToPepartydesc :"+empWorkPlaces.get(0).getToPepartydesc() + "\n getEmpName " + empWorkPlaces.get(0).getEmpName() + "\n ---getPepartydesc :" + empWorkPlaces.get(0).getPepartydesc()) ;
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}

	}
	/**
	 * Method 'findAll'
	 * 
	 */
	public static void findAll()
	{
		try {
			MaintenanceOrdersDao _dao = getMaintenanceOrdersDao();
			MaintenanceOrders _result[] = _dao.findAll();
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereOrderNoEquals'
	 * 
	 * @param orderNo
	 */
	public static void findWhereOrderNoEquals(int orderNo)
	{
		try {
			MaintenanceOrdersDao _dao = getMaintenanceOrdersDao();
			MaintenanceOrders _result[] = _dao.findWhereOrderNoEquals(orderNo);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereOrderYearEquals'
	 * 
	 * @param orderYear
	 */
	public static void findWhereOrderYearEquals(short orderYear)
	{
		try {
			MaintenanceOrdersDao _dao = getMaintenanceOrdersDao();
			MaintenanceOrders _result[] = _dao.findWhereOrderYearEquals(orderYear);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWherePeEmpNoEquals'
	 * 
	 * @param peEmpNo
	 */
	public static void findWherePeEmpNoEquals(int peEmpNo)
	{
		try {
			MaintenanceOrdersDao _dao = getMaintenanceOrdersDao();
			MaintenanceOrders _result[] = _dao.findWherePeEmpNoEquals(peEmpNo);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereOrderDateEquals'
	 * 
	 * @param orderDate
	 */
	public static void findWhereOrderDateEquals(Date orderDate)
	{
		try {
			MaintenanceOrdersDao _dao = getMaintenanceOrdersDao();
			MaintenanceOrders _result[] = _dao.findWhereOrderDateEquals(orderDate);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereProblemDescEquals'
	 * 
	 * @param problemDesc
	 */
	public static void findWhereProblemDescEquals(String problemDesc)
	{
		try {
			MaintenanceOrdersDao _dao = getMaintenanceOrdersDao();
			MaintenanceOrders _result[] = _dao.findWhereProblemDescEquals(problemDesc);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWherePeTypeCodeEquals'
	 * 
	 * @param peTypeCode
	 */
	public static void findWherePeTypeCodeEquals(short peTypeCode)
	{
		try {
			MaintenanceOrdersDao _dao = getMaintenanceOrdersDao();
			MaintenanceOrders _result[] = _dao.findWherePeTypeCodeEquals(peTypeCode);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWherePeMainCodeEquals'
	 * 
	 * @param peMainCode
	 */
	public static void findWherePeMainCodeEquals(short peMainCode)
	{
		try {
			MaintenanceOrdersDao _dao = getMaintenanceOrdersDao();
			MaintenanceOrders _result[] = _dao.findWherePeMainCodeEquals(peMainCode);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWherePeSectionCodeEquals'
	 * 
	 * @param peSectionCode
	 */
	public static void findWherePeSectionCodeEquals(short peSectionCode)
	{
		try {
			MaintenanceOrdersDao _dao = getMaintenanceOrdersDao();
			MaintenanceOrders _result[] = _dao.findWherePeSectionCodeEquals(peSectionCode);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWherePeClassCodeEquals'
	 * 
	 * @param peClassCode
	 */
	public static void findWherePeClassCodeEquals(short peClassCode)
	{
		try {
			MaintenanceOrdersDao _dao = getMaintenanceOrdersDao();
			MaintenanceOrders _result[] = _dao.findWherePeClassCodeEquals(peClassCode);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereEmpPhoneEquals'
	 * 
	 * @param empPhone
	 */
	public static void findWhereEmpPhoneEquals(String empPhone)
	{
		try {
			MaintenanceOrdersDao _dao = getMaintenanceOrdersDao();
			MaintenanceOrders _result[] = _dao.findWhereEmpPhoneEquals(empPhone);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereEmpOpinionEquals'
	 * 
	 * @param empOpinion
	 */
	public static void findWhereEmpOpinionEquals(String empOpinion)
	{
		try {
			MaintenanceOrdersDao _dao = getMaintenanceOrdersDao();
			MaintenanceOrders _result[] = _dao.findWhereEmpOpinionEquals(empOpinion);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereOrderEmergEquals'
	 * 
	 * @param orderEmerg
	 */
	public static void findWhereOrderEmergEquals(short orderEmerg)
	{
		try {
			MaintenanceOrdersDao _dao = getMaintenanceOrdersDao();
			MaintenanceOrders _result[] = _dao.findWhereOrderEmergEquals(orderEmerg);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereOrderStatusEquals'
	 * 
	 * @param orderStatus
	 */
	public static void findWhereOrderStatusEquals(short orderStatus)
	{
		try {
			MaintenanceOrdersDao _dao = getMaintenanceOrdersDao();
			MaintenanceOrders _result[] = _dao.findWhereOrderStatusEquals(orderStatus);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'getMaintenanceOrdersDao'
	 * 
	 * @return MaintenanceOrdersDao
	 */
	public static MaintenanceOrdersDao getMaintenanceOrdersDao()
	{
		return MaintenanceOrdersDaoFactory.create();
	}

	/**
	 * Method 'display'
	 * 
	 * @param dto
	 */
	public static void display(MaintenanceOrders dto)
	{
		StringBuffer buf = new StringBuffer();
		buf.append( dto.getOrderNo() );
		buf.append( ", " );
		buf.append( dto.getOrderYear() );
		buf.append( ", " );
		buf.append( dto.getPeEmpNo() );
		buf.append( ", " );
		buf.append( dto.getOrderDate() );
		buf.append( ", " );
		buf.append( dto.getProblemDesc() );
		buf.append( ", " );
		buf.append( dto.getPeTypeCode() );
		buf.append( ", " );
		buf.append( dto.getPeMainCode() );
		buf.append( ", " );
		buf.append( dto.getPeSectionCode() );
		buf.append( ", " );
		buf.append( dto.getPeClassCode() );
		buf.append( ", " );
		buf.append( dto.getEmpPhone() );
		buf.append( ", " );
		buf.append( dto.getEmpOpinion() );
		buf.append( ", " );
		buf.append( dto.getOrderEmerg() );
		buf.append( ", " );
		buf.append( dto.getOrderStatus() );
		System.out.println( buf.toString() );
	}

    private static void findWhereOrderStatusEqualsNew() {
		try {
			MaintenanceOrdersDao _dao = getMaintenanceOrdersDao();
			MaintenanceOrders _result[] = _dao.findWhereOrderStatusEqualsNew((short)1,1523);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
    }
    private static void findByPk() {
		try {
			MaintenanceOrdersDao _dao = getMaintenanceOrdersDao();
			MaintenanceOrdersDesc _result = _dao.findByPk(11,(short)2013);
			display( _result );
                        System.out.println("to" + _result.getEmpName() + "--" + _result.getPepartydesc());
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
    }

}
